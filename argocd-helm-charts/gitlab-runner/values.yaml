gitlab-runner:
  ## How many runner pods to launch.
  # replicas: 1
  
  ## The GitLab Server URL (with protocol) that want to register the runner against
  ## ref: https://docs.gitlab.com/runner/commands/README.html#gitlab-runner-register
  ##
  # gitlabUrl: https://gitlab.yourdomain.dk/
  
  ## For RBAC support:
  rbac:
    create: true
  
  ## Configure integrated Prometheus metrics exporter
  ## ref: https://docs.gitlab.com/runner/monitoring/#configuration-of-the-metrics-http-server
  metrics:
    enabled: true
  
  ## Configuration for the Pods that the runner launches for each new job
  ##
  runners:
    # runner configuration, where the multi line strings is evaluated as
    # template so you can specify helm values inside of it.
    #
    # tpl: https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function
    # runner configuration: https://docs.gitlab.com/runner/configuration/advanced-configuration.html
    config: |
      [[runners]]
        [runners.kubernetes]
          namespace = "{{.Release.Namespace}}"
          image = "ubuntu:20.04"
    #      helper_cpu_limit = "2000m"
          
  
    ## Specify whether the runner should be locked to a specific project: true, false. Defaults to true.
    ##
    locked: false
  
    ## The name of the secret containing runner-token and runner-registration-token
    secret: gitlab-runner
  
  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
     limits:
       memory: 256Mi
       cpu: 2
     requests:
       memory: 128Mi
       cpu: 1
  
  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  
  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
    # Example: The gitlab runner manager should not run on spot instances so you can assign
    # them to the regular worker nodes only.
    # node-role.kubernetes.io/worker: "true"
  
  ## List of node taints to tolerate (requires Kubernetes >= 1.6)
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
    # Example: Regular worker nodes may have a taint, thus you need to tolerate the taint
    # when you assign the gitlab runner manager with nodeSelector or affinity to the nodes.
    # - key: "node-role.kubernetes.io/worker"
    #   operator: "Exists"
  
  ## Configure environment variables that will be present when the registration command runs
  ## This provides further control over the registration process and the config.toml file
  ## ref: `gitlab-runner register --help`
  ## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html
  ##
  # envVars:
  #   - name: RUNNER_EXECUTOR
  #     value: kubernetes
  
  ## list of hosts and IPs that will be injected into the pod's hosts file
  hostAliases: []
    # Example:
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "foo.local"
    #   - "bar.local"
    # - ip: "10.1.2.3"
    #   hostnames:
    #   - "foo.remote"
    #   - "bar.remote"
  
  ## Annotations to be added to manager pod
  ##
  podAnnotations: {}
    # Example:
    # iam.amazonaws.com/role: <my_role_arn>
  
  ## Labels to be added to manager pod
  ##
  podLabels: {}
    # Example:
    # owner.team: <my_cool_team>
  
  ## HPA support for custom metrics:
  ## This section enables runners to autoscale based on defined custom metrics.
  ## In order to use this functionality, Need to enable a custom metrics API server by
  ## implementing "custom.metrics.k8s.io" using supported third party adapter
  ## Example: https://github.com/directxman12/k8s-prometheus-adapter
  ##
  #hpa: {}
    # minReplicas: 1
    # maxReplicas: 10
    # metrics:
    # - type: Pods
    #   pods:
    #     metricName: gitlab_runner_jobs
    #     targetAverageValue: 400m
  
  ## Secrets to be additionally mounted to the containers.
  ## All secrets are mounted through init-runner-secrets volume
  ## and placed as readonly at /init-secrets in the init container
  ## and finally copied to an in-memory volume runner-secrets that is
  ## mounted at /secrets.
  secrets: []
    # Example:
    # - name: my-secret
    # - name: myOtherSecret
    #   items:
    #     - key: key_one
    #       path: path_one
  
  ## Additional config files to mount in the containers in `/configmaps`.
  ##
  ## Please note that a number of keys are reserved by the runner.
  ## See https://gitlab.com/gitlab-org/charts/gitlab-runner/-/blob/main/templates/configmap.yaml
  ## for a current list.
  configMaps: {}
  
